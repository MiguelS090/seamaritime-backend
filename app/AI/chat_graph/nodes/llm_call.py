import logging
from langchain_core.messages import SystemMessage, HumanMessage
from app.AI.shared.memory.k_messages import get_k_messages_formatted
from app.AI.chat_graph.state import State

logger = logging.getLogger(__name__)

def llm_call(state: State, llm_with_tools):
    """
    Constr√≥i o prompt para o LLM com instru√ß√µes detalhadas para:
      - Garantir consultas seguras ao BD.
      - Gerar a consulta SQL apropriada para o gr√°fico solicitado.
      - Mapear corretamente as colunas retornadas para o gr√°fico.
      - E, caso a resposta seja um relat√≥rio (ou seja, uma an√°lise textual dos dados),
        incluir a flag [REPORT_FLAG] no in√≠cio da resposta.
    
    Utilize uma abordagem de Chain-of-Thought para decompor a tarefa em etapas:
      1. Identificar as colunas dispon√≠veis.
      2. Gerar a consulta SQL.
      3. Configurar o gr√°fico com base no mapeamento.
    
    **Instru√ß√µes espec√≠ficas para gr√°ficos:**
    - **Gr√°fico de Pizza:**  
      Gere uma consulta SQL que retorne pelo menos uma coluna categ√≥rica e uma num√©rica.  
      A coluna num√©rica determinar√° o tamanho de cada fatia, enquanto a categ√≥rica servir√° como r√≥tulo.  
      Se necess√°rio, calcule a porcentagem de cada categoria em rela√ß√£o ao total.
    
    - **Gr√°ficos de Barras e Linhas:**  
      Se houver uma coluna categ√≥rica e uma ou mais num√©ricas, utilize a coluna categ√≥rica para o eixo X  
      e as num√©ricas para os valores do eixo Y. Caso n√£o haja uma coluna categ√≥rica, utilize o √≠ndice dos dados.  
      Se houver mais de 5 categorias, rotacione os r√≥tulos do eixo X para melhor visualiza√ß√£o.
    
    - **Gr√°fico de Dispers√£o (Scatter):**  
      Requer pelo menos duas colunas num√©ricas.  
      Utilize a primeira coluna num√©rica para o eixo X e a segunda para o eixo Y.  
      Se uma terceira coluna num√©rica estiver dispon√≠vel, ela pode ser usada para definir a cor dos pontos,  
      possibilitando uma an√°lise mais detalhada.
    
    - **Mapa de Calor (Heatmap):**  
      Necessita de pelo menos duas colunas categ√≥ricas e uma num√©rica.  
      A primeira coluna ser√° utilizada como √≠ndice (linhas) e a segunda como colunas,  
      enquanto a coluna num√©rica representar√° os valores agregados (por padr√£o, utilizando a soma).
    
    **Relat√≥rios:**  
    Se o usu√°rio solicitar um relat√≥rio, elabore um texto claro e detalhado, iniciando a resposta com [REPORT_FLAG]  
    e utilizando marca√ß√£o HTML estruturada com as tags <h1>, <h2>, <p>, <table>, <tr>, <th> e <td> para organizar as informa√ß√µes.
    
    Utilize uma abordagem passo a passo (Chain-of-Thought) para decompor a tarefa e garantir precis√£o na resposta.
    """
    # Recupera o hist√≥rico da conversa
    conversation_history = "\n".join(message.content for message in get_k_messages_formatted(state['chat_id'], 5))
    file_info = "" if state.get("file") is None else "\nüìÇ Arquivo enviado: " + state["file"]
    
    # Monta as instru√ß√µes detalhadas
    instructions = (
        "Voc√™ √© um assistente especializado em an√°lise de dados, gera√ß√£o de gr√°ficos e elabora√ß√£o de relat√≥rios. "
        "Seu objetivo √© responder de forma precisa e segura, estruturando consultas SQL apenas para leitura, "
        "gerando gr√°ficos quando necess√°rio e, quando solicitado, produzindo relat√≥rios anal√≠ticos a partir dos dados, responder a anexos (arquivos) quando houver.\n\n"
        "‚ö†Ô∏è **REGRAS PARA CONSULTAS E GERA√á√ÉO DE GR√ÅFICOS:**\n"
        "1. Antes de consultar qualquer tabela, chame `show_tables` para listar as tabelas dispon√≠veis.\n"
        "2. Ao acessar uma tabela, chame `get_table_columns` para obter sua estrutura.\n"
        "3. Use `consult_database` para executar consultas somente de leitura.\n"
        "4. Para gerar gr√°ficos, utilize `generate_chart` com os par√¢metros adequados.\n\n"
        "**Instru√ß√µes espec√≠ficas para gr√°ficos:**\n"
        "- **Gr√°fico de Pizza:** Gere uma consulta SQL que retorne pelo menos uma coluna categ√≥rica e uma num√©rica. "
            "A coluna num√©rica determinar√° o tamanho de cada fatia, enquanto a categ√≥rica servir√° como r√≥tulo. "
            "Se necess√°rio, calcule a porcentagem de cada categoria em rela√ß√£o ao total.\n"
        "- **Gr√°ficos de Barras e Linhas:** Se houver uma coluna categ√≥rica e uma ou mais num√©ricas, utilize a coluna "
            "categ√≥rica para o eixo X e as num√©ricas para os valores do eixo Y. Caso n√£o haja uma coluna categ√≥rica, utilize o √≠ndice. "
            "Se o n√∫mero de categorias for superior a 5, rotacione os r√≥tulos do eixo X para melhor visualiza√ß√£o.\n"
        "- **Gr√°fico de Dispers√£o (Scatter):** Requer pelo menos duas colunas num√©ricas. Use a primeira coluna para o eixo X e a segunda para o eixo Y. "
            "Se houver uma terceira coluna, ela pode definir a cor dos pontos.\n"
        "- **Mapa de Calor (Heatmap):** Necessita de pelo menos duas colunas categ√≥ricas e uma num√©rica. "
            "A primeira coluna ser√° usada como √≠ndice (linhas), a segunda como colunas e a num√©rica para os valores agregados (soma por padr√£o).\n\n"
        "**Relat√≥rios:** Se o usu√°rio solicitar um relat√≥rio, elabore um texto claro e detalhado iniciando com [REPORT_FLAG] e "
        "utilize HTML estruturado (<h1>, <h2>, <p>, <table>, <tr>, <th>, <td>) para formatar a resposta.\n\n"
        "Utilize uma abordagem passo a passo (Chain-of-Thought) para decompor a tarefa e garantir a precis√£o na resposta.\n\n"
        "üìú **Hist√≥rico da conversa:**\n" + conversation_history + "\n üìú **Arquivo do usu√°rio anexado (Pode ser vazio):**\n"  + file_info
    )
    
    # Cria as mensagens para o prompt
    prompt_messages = [
        SystemMessage(content=instructions),
        HumanMessage(content="üó£Ô∏è Pergunta do usu√°rio: " + state["user_question"])
    ] + state.get("messages", [])
    
    # Invoca o LLM com o prompt montado
    resposta = llm_with_tools.invoke(prompt_messages)
    logger.info("Resposta do LLM: %s", resposta)
    return {"messages": [resposta]}
